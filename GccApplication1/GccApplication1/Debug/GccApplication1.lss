
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  0000063e  000006d2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000063e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  0080010a  0080010a  000006dc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000006dc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000070c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000748  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000aad  00000000  00000000  000007a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000091c  00000000  00000000  0000124d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000046c  00000000  00000000  00001b69  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000b4  00000000  00000000  00001fd8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004e3  00000000  00000000  0000208c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000014a  00000000  00000000  0000256f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  000026b9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	6a c0       	rjmp	.+212    	; 0x106 <__vector_12>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ee e3       	ldi	r30, 0x3E	; 62
  a0:	f6 e0       	ldi	r31, 0x06	; 6
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 30       	cpi	r26, 0x0A	; 10
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	aa e0       	ldi	r26, 0x0A	; 10
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a2 31       	cpi	r26, 0x12	; 18
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	93 d0       	rcall	.+294    	; 0x1ea <main>
  c4:	ba c2       	rjmp	.+1396   	; 0x63a <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <adcInit>:
	0b0000000000000000
};

void adcInit( void )
{
	ADMUX = 0b01100001;
  c8:	81 e6       	ldi	r24, 0x61	; 97
  ca:	87 b9       	out	0x07, r24	; 7
	ADCSRA = 0b10000110;
  cc:	86 e8       	ldi	r24, 0x86	; 134
  ce:	86 b9       	out	0x06, r24	; 6
  d0:	08 95       	ret

000000d2 <changeADCChannel>:
}

void changeADCChannel(int channel){
	ADMUX = 0x60 | channel;
  d2:	80 66       	ori	r24, 0x60	; 96
  d4:	87 b9       	out	0x07, r24	; 7
  d6:	08 95       	ret

000000d8 <readADC>:
}

int readADC(){
	ADCSRA |= (1 << 6);
  d8:	86 b1       	in	r24, 0x06	; 6
  da:	80 64       	ori	r24, 0x40	; 64
  dc:	86 b9       	out	0x06, r24	; 6
	while ( ADCSRA & (1 << 6) );
  de:	36 99       	sbic	0x06, 6	; 6
  e0:	fe cf       	rjmp	.-4      	; 0xde <readADC+0x6>
	return ADCH;
  e2:	85 b1       	in	r24, 0x05	; 5
}
  e4:	90 e0       	ldi	r25, 0x00	; 0
  e6:	08 95       	ret

000000e8 <wait>:

void wait(int ms)
{
	for (int i=0; i<ms; i++)
  e8:	20 e0       	ldi	r18, 0x00	; 0
  ea:	30 e0       	ldi	r19, 0x00	; 0
  ec:	08 c0       	rjmp	.+16     	; 0xfe <wait+0x16>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ee:	ef e9       	ldi	r30, 0x9F	; 159
  f0:	ff e0       	ldi	r31, 0x0F	; 15
  f2:	31 97       	sbiw	r30, 0x01	; 1
  f4:	f1 f7       	brne	.-4      	; 0xf2 <wait+0xa>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <wait+0x10>
  f8:	00 00       	nop
  fa:	2f 5f       	subi	r18, 0xFF	; 255
  fc:	3f 4f       	sbci	r19, 0xFF	; 255
  fe:	28 17       	cp	r18, r24
 100:	39 07       	cpc	r19, r25
 102:	ac f3       	brlt	.-22     	; 0xee <wait+0x6>
	_delay_ms(1);
}
 104:	08 95       	ret

00000106 <__vector_12>:

ISR(TIMER1_COMPA_vect)
{
 106:	1f 92       	push	r1
 108:	0f 92       	push	r0
 10a:	0f b6       	in	r0, 0x3f	; 63
 10c:	0f 92       	push	r0
 10e:	11 24       	eor	r1, r1
 110:	2f 93       	push	r18
 112:	3f 93       	push	r19
 114:	8f 93       	push	r24
 116:	9f 93       	push	r25
	// take first bit
	uint8_t shiftout;
	shiftout = waveform & (1<<0);
 118:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <waveform>
 11c:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <waveform+0x1>
	// move waveform 1 place to the right
	waveform >>= 1;
		
	// if we removed a 1 with the bit shift put a 1 to the end of the waveform
	// else do nothing and let it stay 0
	waveform &= ~(1 << 15);
 120:	9c 01       	movw	r18, r24
 122:	36 95       	lsr	r19
 124:	27 95       	ror	r18
 126:	30 93 11 01 	sts	0x0111, r19	; 0x800111 <waveform+0x1>
 12a:	20 93 10 01 	sts	0x0110, r18	; 0x800110 <waveform>
	if(shiftout)
 12e:	98 2f       	mov	r25, r24
 130:	91 70       	andi	r25, 0x01	; 1
 132:	80 ff       	sbrs	r24, 0
 134:	05 c0       	rjmp	.+10     	; 0x140 <__vector_12+0x3a>
		waveform |= (1 << 15);
 136:	30 68       	ori	r19, 0x80	; 128
 138:	30 93 11 01 	sts	0x0111, r19	; 0x800111 <waveform+0x1>
 13c:	20 93 10 01 	sts	0x0110, r18	; 0x800110 <waveform>

	PORTA = waveform;
 140:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <waveform>
 144:	8b bb       	out	0x1b, r24	; 27
	PORTB = waveform >> 8;
 146:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <waveform+0x1>
 14a:	88 bb       	out	0x18, r24	; 24
	
	//shiftout &= envval;
	
	if(shiftout)
 14c:	99 23       	and	r25, r25
 14e:	19 f0       	breq	.+6      	; 0x156 <__vector_12+0x50>
		DDRF = 0x0;
 150:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 154:	03 c0       	rjmp	.+6      	; 0x15c <__vector_12+0x56>
		//PORTE |= (1 << 2);
	else
		DDRF = 0x1;
 156:	81 e0       	ldi	r24, 0x01	; 1
 158:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
		//PORTE &= ~(1 << 2);
	
}
 15c:	9f 91       	pop	r25
 15e:	8f 91       	pop	r24
 160:	3f 91       	pop	r19
 162:	2f 91       	pop	r18
 164:	0f 90       	pop	r0
 166:	0f be       	out	0x3f, r0	; 63
 168:	0f 90       	pop	r0
 16a:	1f 90       	pop	r1
 16c:	18 95       	reti

0000016e <update_pitch>:

// set new pitch
void update_pitch()
{
	uint16_t newpitch = 1U + (floor((pitch-lfoval)*1U)/10);
 16e:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 172:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 176:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
 17a:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <__data_end+0x1>
 17e:	68 1b       	sub	r22, r24
 180:	79 0b       	sbc	r23, r25
 182:	80 e0       	ldi	r24, 0x00	; 0
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	78 d1       	rcall	.+752    	; 0x478 <__floatunsisf>
 188:	b4 d1       	rcall	.+872    	; 0x4f2 <floor>
 18a:	20 e0       	ldi	r18, 0x00	; 0
 18c:	30 e0       	ldi	r19, 0x00	; 0
 18e:	40 e2       	ldi	r20, 0x20	; 32
 190:	51 e4       	ldi	r21, 0x41	; 65
 192:	de d0       	rcall	.+444    	; 0x350 <__divsf3>
 194:	20 e0       	ldi	r18, 0x00	; 0
 196:	30 e0       	ldi	r19, 0x00	; 0
 198:	40 e8       	ldi	r20, 0x80	; 128
 19a:	5f e3       	ldi	r21, 0x3F	; 63
 19c:	75 d0       	rcall	.+234    	; 0x288 <__addsf3>
 19e:	40 d1       	rcall	.+640    	; 0x420 <__fixunssfsi>
	
	if (newpitch != outpitch)
 1a0:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <outpitch>
 1a4:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <outpitch+0x1>
 1a8:	62 17       	cp	r22, r18
 1aa:	73 07       	cpc	r23, r19
 1ac:	89 f0       	breq	.+34     	; 0x1d0 <update_pitch+0x62>
	{
		outpitch = newpitch;
 1ae:	70 93 0f 01 	sts	0x010F, r23	; 0x80010f <outpitch+0x1>
 1b2:	60 93 0e 01 	sts	0x010E, r22	; 0x80010e <outpitch>
		if (TCNT1 > outpitch)
 1b6:	2c b5       	in	r18, 0x2c	; 44
 1b8:	3d b5       	in	r19, 0x2d	; 45
 1ba:	62 17       	cp	r22, r18
 1bc:	73 07       	cpc	r23, r19
 1be:	10 f4       	brcc	.+4      	; 0x1c4 <update_pitch+0x56>
		TCNT1 = 0;
 1c0:	1d bc       	out	0x2d, r1	; 45
 1c2:	1c bc       	out	0x2c, r1	; 44
		OCR1A = outpitch;
 1c4:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <outpitch>
 1c8:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <outpitch+0x1>
 1cc:	9b bd       	out	0x2b, r25	; 43
 1ce:	8a bd       	out	0x2a, r24	; 42
 1d0:	08 95       	ret

000001d2 <setupTimer>:
	}
}

void setupTimer(){
	OCR1A = 500;
 1d2:	84 ef       	ldi	r24, 0xF4	; 244
 1d4:	91 e0       	ldi	r25, 0x01	; 1
 1d6:	9b bd       	out	0x2b, r25	; 43
 1d8:	8a bd       	out	0x2a, r24	; 42
	TIMSK |= (1 << 4);
 1da:	87 b7       	in	r24, 0x37	; 55
 1dc:	80 61       	ori	r24, 0x10	; 16
 1de:	87 bf       	out	0x37, r24	; 55
	sei();
 1e0:	78 94       	sei
	TCCR1A = 0b0;
 1e2:	1f bc       	out	0x2f, r1	; 47
	TCCR1B = 0b1100;
 1e4:	8c e0       	ldi	r24, 0x0C	; 12
 1e6:	8e bd       	out	0x2e, r24	; 46
 1e8:	08 95       	ret

000001ea <main>:
	
}

int main()
{	
	DDRF = 0x01;
 1ea:	81 e0       	ldi	r24, 0x01	; 1
 1ec:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
	DDRA = 0xFF;
 1f0:	8f ef       	ldi	r24, 0xFF	; 255
 1f2:	8a bb       	out	0x1a, r24	; 26
	DDRB = 0xFF;
 1f4:	87 bb       	out	0x17, r24	; 23
	DDRD = 0x0;
 1f6:	11 ba       	out	0x11, r1	; 17
	//DDRD = 0xFF;
	DDRE = 0b01000110;
 1f8:	86 e4       	ldi	r24, 0x46	; 70
 1fa:	82 b9       	out	0x02, r24	; 2
	DDRG = 0x00;
 1fc:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
	adcInit();
 200:	63 df       	rcall	.-314    	; 0xc8 <adcInit>
	int pressed = 0;
	wavenum = 2;
 202:	82 e0       	ldi	r24, 0x02	; 2
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <wavenum+0x1>
 20a:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <wavenum>
	waveform = waveforms[wavenum];
 20e:	8a ea       	ldi	r24, 0xAA	; 170
 210:	9a ea       	ldi	r25, 0xAA	; 170
 212:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <waveform+0x1>
 216:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <waveform>
	
	setupTimer();
 21a:	db df       	rcall	.-74     	; 0x1d2 <setupTimer>
	DDRD = 0x0;
	//DDRD = 0xFF;
	DDRE = 0b01000110;
	DDRG = 0x00;
	adcInit();
	int pressed = 0;
 21c:	c0 e0       	ldi	r28, 0x00	; 0
 21e:	d0 e0       	ldi	r29, 0x00	; 0
	setupTimer();
	
	while(1){
		//changeADCChannel(0);
		//PORTA = readADC();
		changeADCChannel(1);
 220:	81 e0       	ldi	r24, 0x01	; 1
 222:	90 e0       	ldi	r25, 0x00	; 0
		pitch = readADC();
 224:	56 df       	rcall	.-340    	; 0xd2 <changeADCChannel>
 226:	58 df       	rcall	.-336    	; 0xd8 <readADC>
 228:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 22c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
		
		update_pitch();
 230:	9e df       	rcall	.-196    	; 0x16e <update_pitch>
		
		if(PINE & 0x80){
 232:	0f 9b       	sbis	0x01, 7	; 1
 234:	22 c0       	rjmp	.+68     	; 0x27a <main+0x90>
			if(pressed == 0){
 236:	20 97       	sbiw	r28, 0x00	; 0
 238:	11 f5       	brne	.+68     	; 0x27e <main+0x94>
				//PORTE ^= (1<<6);
				wavenum++;
 23a:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <wavenum>
 23e:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <wavenum+0x1>
 242:	01 96       	adiw	r24, 0x01	; 1
				wavenum = wavenum > 3? 0 : wavenum;
 244:	84 30       	cpi	r24, 0x04	; 4
 246:	91 05       	cpc	r25, r1
 248:	14 f0       	brlt	.+4      	; 0x24e <main+0x64>
 24a:	80 e0       	ldi	r24, 0x00	; 0
 24c:	90 e0       	ldi	r25, 0x00	; 0
				wavenum = wavenum < 0? 3 : wavenum;
 24e:	99 23       	and	r25, r25
 250:	14 f4       	brge	.+4      	; 0x256 <main+0x6c>
 252:	83 e0       	ldi	r24, 0x03	; 3
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <wavenum+0x1>
 25a:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <wavenum>
				waveform = waveforms[wavenum];
 25e:	88 0f       	add	r24, r24
 260:	99 1f       	adc	r25, r25
 262:	fc 01       	movw	r30, r24
 264:	ee 5f       	subi	r30, 0xFE	; 254
 266:	fe 4f       	sbci	r31, 0xFE	; 254
 268:	80 81       	ld	r24, Z
 26a:	91 81       	ldd	r25, Z+1	; 0x01
 26c:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <waveform+0x1>
 270:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <waveform>
				pressed = 1;
 274:	c1 e0       	ldi	r28, 0x01	; 1
 276:	d0 e0       	ldi	r29, 0x00	; 0
			}
		} else { 
			pressed = 0;
 278:	02 c0       	rjmp	.+4      	; 0x27e <main+0x94>
 27a:	c0 e0       	ldi	r28, 0x00	; 0
		}
		
		wait(100);
 27c:	d0 e0       	ldi	r29, 0x00	; 0
 27e:	84 e6       	ldi	r24, 0x64	; 100
 280:	90 e0       	ldi	r25, 0x00	; 0
 282:	32 df       	rcall	.-412    	; 0xe8 <wait>
	}
 284:	cd cf       	rjmp	.-102    	; 0x220 <main+0x36>

00000286 <__subsf3>:
 286:	50 58       	subi	r21, 0x80	; 128

00000288 <__addsf3>:
 288:	bb 27       	eor	r27, r27
 28a:	aa 27       	eor	r26, r26
 28c:	0e d0       	rcall	.+28     	; 0x2aa <__addsf3x>
 28e:	84 c1       	rjmp	.+776    	; 0x598 <__fp_round>
 290:	75 d1       	rcall	.+746    	; 0x57c <__fp_pscA>
 292:	30 f0       	brcs	.+12     	; 0x2a0 <__addsf3+0x18>
 294:	7a d1       	rcall	.+756    	; 0x58a <__fp_pscB>
 296:	20 f0       	brcs	.+8      	; 0x2a0 <__addsf3+0x18>
 298:	31 f4       	brne	.+12     	; 0x2a6 <__addsf3+0x1e>
 29a:	9f 3f       	cpi	r25, 0xFF	; 255
 29c:	11 f4       	brne	.+4      	; 0x2a2 <__addsf3+0x1a>
 29e:	1e f4       	brtc	.+6      	; 0x2a6 <__addsf3+0x1e>
 2a0:	6a c1       	rjmp	.+724    	; 0x576 <__fp_nan>
 2a2:	0e f4       	brtc	.+2      	; 0x2a6 <__addsf3+0x1e>
 2a4:	e0 95       	com	r30
 2a6:	e7 fb       	bst	r30, 7
 2a8:	37 c1       	rjmp	.+622    	; 0x518 <__fp_inf>

000002aa <__addsf3x>:
 2aa:	e9 2f       	mov	r30, r25
 2ac:	86 d1       	rcall	.+780    	; 0x5ba <__fp_split3>
 2ae:	80 f3       	brcs	.-32     	; 0x290 <__addsf3+0x8>
 2b0:	ba 17       	cp	r27, r26
 2b2:	62 07       	cpc	r22, r18
 2b4:	73 07       	cpc	r23, r19
 2b6:	84 07       	cpc	r24, r20
 2b8:	95 07       	cpc	r25, r21
 2ba:	18 f0       	brcs	.+6      	; 0x2c2 <__addsf3x+0x18>
 2bc:	71 f4       	brne	.+28     	; 0x2da <__addsf3x+0x30>
 2be:	9e f5       	brtc	.+102    	; 0x326 <__addsf3x+0x7c>
 2c0:	b5 c1       	rjmp	.+874    	; 0x62c <__fp_zero>
 2c2:	0e f4       	brtc	.+2      	; 0x2c6 <__addsf3x+0x1c>
 2c4:	e0 95       	com	r30
 2c6:	0b 2e       	mov	r0, r27
 2c8:	ba 2f       	mov	r27, r26
 2ca:	a0 2d       	mov	r26, r0
 2cc:	0b 01       	movw	r0, r22
 2ce:	b9 01       	movw	r22, r18
 2d0:	90 01       	movw	r18, r0
 2d2:	0c 01       	movw	r0, r24
 2d4:	ca 01       	movw	r24, r20
 2d6:	a0 01       	movw	r20, r0
 2d8:	11 24       	eor	r1, r1
 2da:	ff 27       	eor	r31, r31
 2dc:	59 1b       	sub	r21, r25
 2de:	99 f0       	breq	.+38     	; 0x306 <__addsf3x+0x5c>
 2e0:	59 3f       	cpi	r21, 0xF9	; 249
 2e2:	50 f4       	brcc	.+20     	; 0x2f8 <__addsf3x+0x4e>
 2e4:	50 3e       	cpi	r21, 0xE0	; 224
 2e6:	68 f1       	brcs	.+90     	; 0x342 <__addsf3x+0x98>
 2e8:	1a 16       	cp	r1, r26
 2ea:	f0 40       	sbci	r31, 0x00	; 0
 2ec:	a2 2f       	mov	r26, r18
 2ee:	23 2f       	mov	r18, r19
 2f0:	34 2f       	mov	r19, r20
 2f2:	44 27       	eor	r20, r20
 2f4:	58 5f       	subi	r21, 0xF8	; 248
 2f6:	f3 cf       	rjmp	.-26     	; 0x2de <__addsf3x+0x34>
 2f8:	46 95       	lsr	r20
 2fa:	37 95       	ror	r19
 2fc:	27 95       	ror	r18
 2fe:	a7 95       	ror	r26
 300:	f0 40       	sbci	r31, 0x00	; 0
 302:	53 95       	inc	r21
 304:	c9 f7       	brne	.-14     	; 0x2f8 <__addsf3x+0x4e>
 306:	7e f4       	brtc	.+30     	; 0x326 <__addsf3x+0x7c>
 308:	1f 16       	cp	r1, r31
 30a:	ba 0b       	sbc	r27, r26
 30c:	62 0b       	sbc	r22, r18
 30e:	73 0b       	sbc	r23, r19
 310:	84 0b       	sbc	r24, r20
 312:	ba f0       	brmi	.+46     	; 0x342 <__addsf3x+0x98>
 314:	91 50       	subi	r25, 0x01	; 1
 316:	a1 f0       	breq	.+40     	; 0x340 <__addsf3x+0x96>
 318:	ff 0f       	add	r31, r31
 31a:	bb 1f       	adc	r27, r27
 31c:	66 1f       	adc	r22, r22
 31e:	77 1f       	adc	r23, r23
 320:	88 1f       	adc	r24, r24
 322:	c2 f7       	brpl	.-16     	; 0x314 <__addsf3x+0x6a>
 324:	0e c0       	rjmp	.+28     	; 0x342 <__addsf3x+0x98>
 326:	ba 0f       	add	r27, r26
 328:	62 1f       	adc	r22, r18
 32a:	73 1f       	adc	r23, r19
 32c:	84 1f       	adc	r24, r20
 32e:	48 f4       	brcc	.+18     	; 0x342 <__addsf3x+0x98>
 330:	87 95       	ror	r24
 332:	77 95       	ror	r23
 334:	67 95       	ror	r22
 336:	b7 95       	ror	r27
 338:	f7 95       	ror	r31
 33a:	9e 3f       	cpi	r25, 0xFE	; 254
 33c:	08 f0       	brcs	.+2      	; 0x340 <__addsf3x+0x96>
 33e:	b3 cf       	rjmp	.-154    	; 0x2a6 <__addsf3+0x1e>
 340:	93 95       	inc	r25
 342:	88 0f       	add	r24, r24
 344:	08 f0       	brcs	.+2      	; 0x348 <__addsf3x+0x9e>
 346:	99 27       	eor	r25, r25
 348:	ee 0f       	add	r30, r30
 34a:	97 95       	ror	r25
 34c:	87 95       	ror	r24
 34e:	08 95       	ret

00000350 <__divsf3>:
 350:	0c d0       	rcall	.+24     	; 0x36a <__divsf3x>
 352:	22 c1       	rjmp	.+580    	; 0x598 <__fp_round>
 354:	1a d1       	rcall	.+564    	; 0x58a <__fp_pscB>
 356:	40 f0       	brcs	.+16     	; 0x368 <__divsf3+0x18>
 358:	11 d1       	rcall	.+546    	; 0x57c <__fp_pscA>
 35a:	30 f0       	brcs	.+12     	; 0x368 <__divsf3+0x18>
 35c:	21 f4       	brne	.+8      	; 0x366 <__divsf3+0x16>
 35e:	5f 3f       	cpi	r21, 0xFF	; 255
 360:	19 f0       	breq	.+6      	; 0x368 <__divsf3+0x18>
 362:	da c0       	rjmp	.+436    	; 0x518 <__fp_inf>
 364:	51 11       	cpse	r21, r1
 366:	63 c1       	rjmp	.+710    	; 0x62e <__fp_szero>
 368:	06 c1       	rjmp	.+524    	; 0x576 <__fp_nan>

0000036a <__divsf3x>:
 36a:	27 d1       	rcall	.+590    	; 0x5ba <__fp_split3>
 36c:	98 f3       	brcs	.-26     	; 0x354 <__divsf3+0x4>

0000036e <__divsf3_pse>:
 36e:	99 23       	and	r25, r25
 370:	c9 f3       	breq	.-14     	; 0x364 <__divsf3+0x14>
 372:	55 23       	and	r21, r21
 374:	b1 f3       	breq	.-20     	; 0x362 <__divsf3+0x12>
 376:	95 1b       	sub	r25, r21
 378:	55 0b       	sbc	r21, r21
 37a:	bb 27       	eor	r27, r27
 37c:	aa 27       	eor	r26, r26
 37e:	62 17       	cp	r22, r18
 380:	73 07       	cpc	r23, r19
 382:	84 07       	cpc	r24, r20
 384:	38 f0       	brcs	.+14     	; 0x394 <__divsf3_pse+0x26>
 386:	9f 5f       	subi	r25, 0xFF	; 255
 388:	5f 4f       	sbci	r21, 0xFF	; 255
 38a:	22 0f       	add	r18, r18
 38c:	33 1f       	adc	r19, r19
 38e:	44 1f       	adc	r20, r20
 390:	aa 1f       	adc	r26, r26
 392:	a9 f3       	breq	.-22     	; 0x37e <__divsf3_pse+0x10>
 394:	33 d0       	rcall	.+102    	; 0x3fc <__divsf3_pse+0x8e>
 396:	0e 2e       	mov	r0, r30
 398:	3a f0       	brmi	.+14     	; 0x3a8 <__divsf3_pse+0x3a>
 39a:	e0 e8       	ldi	r30, 0x80	; 128
 39c:	30 d0       	rcall	.+96     	; 0x3fe <__divsf3_pse+0x90>
 39e:	91 50       	subi	r25, 0x01	; 1
 3a0:	50 40       	sbci	r21, 0x00	; 0
 3a2:	e6 95       	lsr	r30
 3a4:	00 1c       	adc	r0, r0
 3a6:	ca f7       	brpl	.-14     	; 0x39a <__divsf3_pse+0x2c>
 3a8:	29 d0       	rcall	.+82     	; 0x3fc <__divsf3_pse+0x8e>
 3aa:	fe 2f       	mov	r31, r30
 3ac:	27 d0       	rcall	.+78     	; 0x3fc <__divsf3_pse+0x8e>
 3ae:	66 0f       	add	r22, r22
 3b0:	77 1f       	adc	r23, r23
 3b2:	88 1f       	adc	r24, r24
 3b4:	bb 1f       	adc	r27, r27
 3b6:	26 17       	cp	r18, r22
 3b8:	37 07       	cpc	r19, r23
 3ba:	48 07       	cpc	r20, r24
 3bc:	ab 07       	cpc	r26, r27
 3be:	b0 e8       	ldi	r27, 0x80	; 128
 3c0:	09 f0       	breq	.+2      	; 0x3c4 <__divsf3_pse+0x56>
 3c2:	bb 0b       	sbc	r27, r27
 3c4:	80 2d       	mov	r24, r0
 3c6:	bf 01       	movw	r22, r30
 3c8:	ff 27       	eor	r31, r31
 3ca:	93 58       	subi	r25, 0x83	; 131
 3cc:	5f 4f       	sbci	r21, 0xFF	; 255
 3ce:	2a f0       	brmi	.+10     	; 0x3da <__divsf3_pse+0x6c>
 3d0:	9e 3f       	cpi	r25, 0xFE	; 254
 3d2:	51 05       	cpc	r21, r1
 3d4:	68 f0       	brcs	.+26     	; 0x3f0 <__divsf3_pse+0x82>
 3d6:	a0 c0       	rjmp	.+320    	; 0x518 <__fp_inf>
 3d8:	2a c1       	rjmp	.+596    	; 0x62e <__fp_szero>
 3da:	5f 3f       	cpi	r21, 0xFF	; 255
 3dc:	ec f3       	brlt	.-6      	; 0x3d8 <__divsf3_pse+0x6a>
 3de:	98 3e       	cpi	r25, 0xE8	; 232
 3e0:	dc f3       	brlt	.-10     	; 0x3d8 <__divsf3_pse+0x6a>
 3e2:	86 95       	lsr	r24
 3e4:	77 95       	ror	r23
 3e6:	67 95       	ror	r22
 3e8:	b7 95       	ror	r27
 3ea:	f7 95       	ror	r31
 3ec:	9f 5f       	subi	r25, 0xFF	; 255
 3ee:	c9 f7       	brne	.-14     	; 0x3e2 <__divsf3_pse+0x74>
 3f0:	88 0f       	add	r24, r24
 3f2:	91 1d       	adc	r25, r1
 3f4:	96 95       	lsr	r25
 3f6:	87 95       	ror	r24
 3f8:	97 f9       	bld	r25, 7
 3fa:	08 95       	ret
 3fc:	e1 e0       	ldi	r30, 0x01	; 1
 3fe:	66 0f       	add	r22, r22
 400:	77 1f       	adc	r23, r23
 402:	88 1f       	adc	r24, r24
 404:	bb 1f       	adc	r27, r27
 406:	62 17       	cp	r22, r18
 408:	73 07       	cpc	r23, r19
 40a:	84 07       	cpc	r24, r20
 40c:	ba 07       	cpc	r27, r26
 40e:	20 f0       	brcs	.+8      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 410:	62 1b       	sub	r22, r18
 412:	73 0b       	sbc	r23, r19
 414:	84 0b       	sbc	r24, r20
 416:	ba 0b       	sbc	r27, r26
 418:	ee 1f       	adc	r30, r30
 41a:	88 f7       	brcc	.-30     	; 0x3fe <__divsf3_pse+0x90>
 41c:	e0 95       	com	r30
 41e:	08 95       	ret

00000420 <__fixunssfsi>:
 420:	d4 d0       	rcall	.+424    	; 0x5ca <__fp_splitA>
 422:	88 f0       	brcs	.+34     	; 0x446 <__fixunssfsi+0x26>
 424:	9f 57       	subi	r25, 0x7F	; 127
 426:	90 f0       	brcs	.+36     	; 0x44c <__fixunssfsi+0x2c>
 428:	b9 2f       	mov	r27, r25
 42a:	99 27       	eor	r25, r25
 42c:	b7 51       	subi	r27, 0x17	; 23
 42e:	a0 f0       	brcs	.+40     	; 0x458 <__fixunssfsi+0x38>
 430:	d1 f0       	breq	.+52     	; 0x466 <__fixunssfsi+0x46>
 432:	66 0f       	add	r22, r22
 434:	77 1f       	adc	r23, r23
 436:	88 1f       	adc	r24, r24
 438:	99 1f       	adc	r25, r25
 43a:	1a f0       	brmi	.+6      	; 0x442 <__fixunssfsi+0x22>
 43c:	ba 95       	dec	r27
 43e:	c9 f7       	brne	.-14     	; 0x432 <__fixunssfsi+0x12>
 440:	12 c0       	rjmp	.+36     	; 0x466 <__fixunssfsi+0x46>
 442:	b1 30       	cpi	r27, 0x01	; 1
 444:	81 f0       	breq	.+32     	; 0x466 <__fixunssfsi+0x46>
 446:	f2 d0       	rcall	.+484    	; 0x62c <__fp_zero>
 448:	b1 e0       	ldi	r27, 0x01	; 1
 44a:	08 95       	ret
 44c:	ef c0       	rjmp	.+478    	; 0x62c <__fp_zero>
 44e:	67 2f       	mov	r22, r23
 450:	78 2f       	mov	r23, r24
 452:	88 27       	eor	r24, r24
 454:	b8 5f       	subi	r27, 0xF8	; 248
 456:	39 f0       	breq	.+14     	; 0x466 <__fixunssfsi+0x46>
 458:	b9 3f       	cpi	r27, 0xF9	; 249
 45a:	cc f3       	brlt	.-14     	; 0x44e <__fixunssfsi+0x2e>
 45c:	86 95       	lsr	r24
 45e:	77 95       	ror	r23
 460:	67 95       	ror	r22
 462:	b3 95       	inc	r27
 464:	d9 f7       	brne	.-10     	; 0x45c <__fixunssfsi+0x3c>
 466:	3e f4       	brtc	.+14     	; 0x476 <__fixunssfsi+0x56>
 468:	90 95       	com	r25
 46a:	80 95       	com	r24
 46c:	70 95       	com	r23
 46e:	61 95       	neg	r22
 470:	7f 4f       	sbci	r23, 0xFF	; 255
 472:	8f 4f       	sbci	r24, 0xFF	; 255
 474:	9f 4f       	sbci	r25, 0xFF	; 255
 476:	08 95       	ret

00000478 <__floatunsisf>:
 478:	e8 94       	clt
 47a:	09 c0       	rjmp	.+18     	; 0x48e <__floatsisf+0x12>

0000047c <__floatsisf>:
 47c:	97 fb       	bst	r25, 7
 47e:	3e f4       	brtc	.+14     	; 0x48e <__floatsisf+0x12>
 480:	90 95       	com	r25
 482:	80 95       	com	r24
 484:	70 95       	com	r23
 486:	61 95       	neg	r22
 488:	7f 4f       	sbci	r23, 0xFF	; 255
 48a:	8f 4f       	sbci	r24, 0xFF	; 255
 48c:	9f 4f       	sbci	r25, 0xFF	; 255
 48e:	99 23       	and	r25, r25
 490:	a9 f0       	breq	.+42     	; 0x4bc <__floatsisf+0x40>
 492:	f9 2f       	mov	r31, r25
 494:	96 e9       	ldi	r25, 0x96	; 150
 496:	bb 27       	eor	r27, r27
 498:	93 95       	inc	r25
 49a:	f6 95       	lsr	r31
 49c:	87 95       	ror	r24
 49e:	77 95       	ror	r23
 4a0:	67 95       	ror	r22
 4a2:	b7 95       	ror	r27
 4a4:	f1 11       	cpse	r31, r1
 4a6:	f8 cf       	rjmp	.-16     	; 0x498 <__floatsisf+0x1c>
 4a8:	fa f4       	brpl	.+62     	; 0x4e8 <__floatsisf+0x6c>
 4aa:	bb 0f       	add	r27, r27
 4ac:	11 f4       	brne	.+4      	; 0x4b2 <__floatsisf+0x36>
 4ae:	60 ff       	sbrs	r22, 0
 4b0:	1b c0       	rjmp	.+54     	; 0x4e8 <__floatsisf+0x6c>
 4b2:	6f 5f       	subi	r22, 0xFF	; 255
 4b4:	7f 4f       	sbci	r23, 0xFF	; 255
 4b6:	8f 4f       	sbci	r24, 0xFF	; 255
 4b8:	9f 4f       	sbci	r25, 0xFF	; 255
 4ba:	16 c0       	rjmp	.+44     	; 0x4e8 <__floatsisf+0x6c>
 4bc:	88 23       	and	r24, r24
 4be:	11 f0       	breq	.+4      	; 0x4c4 <__floatsisf+0x48>
 4c0:	96 e9       	ldi	r25, 0x96	; 150
 4c2:	11 c0       	rjmp	.+34     	; 0x4e6 <__floatsisf+0x6a>
 4c4:	77 23       	and	r23, r23
 4c6:	21 f0       	breq	.+8      	; 0x4d0 <__floatsisf+0x54>
 4c8:	9e e8       	ldi	r25, 0x8E	; 142
 4ca:	87 2f       	mov	r24, r23
 4cc:	76 2f       	mov	r23, r22
 4ce:	05 c0       	rjmp	.+10     	; 0x4da <__floatsisf+0x5e>
 4d0:	66 23       	and	r22, r22
 4d2:	71 f0       	breq	.+28     	; 0x4f0 <__floatsisf+0x74>
 4d4:	96 e8       	ldi	r25, 0x86	; 134
 4d6:	86 2f       	mov	r24, r22
 4d8:	70 e0       	ldi	r23, 0x00	; 0
 4da:	60 e0       	ldi	r22, 0x00	; 0
 4dc:	2a f0       	brmi	.+10     	; 0x4e8 <__floatsisf+0x6c>
 4de:	9a 95       	dec	r25
 4e0:	66 0f       	add	r22, r22
 4e2:	77 1f       	adc	r23, r23
 4e4:	88 1f       	adc	r24, r24
 4e6:	da f7       	brpl	.-10     	; 0x4de <__floatsisf+0x62>
 4e8:	88 0f       	add	r24, r24
 4ea:	96 95       	lsr	r25
 4ec:	87 95       	ror	r24
 4ee:	97 f9       	bld	r25, 7
 4f0:	08 95       	ret

000004f2 <floor>:
 4f2:	85 d0       	rcall	.+266    	; 0x5fe <__fp_trunc>
 4f4:	80 f0       	brcs	.+32     	; 0x516 <floor+0x24>
 4f6:	9f 37       	cpi	r25, 0x7F	; 127
 4f8:	40 f4       	brcc	.+16     	; 0x50a <floor+0x18>
 4fa:	91 11       	cpse	r25, r1
 4fc:	0e f0       	brts	.+2      	; 0x500 <floor+0xe>
 4fe:	97 c0       	rjmp	.+302    	; 0x62e <__fp_szero>
 500:	60 e0       	ldi	r22, 0x00	; 0
 502:	70 e0       	ldi	r23, 0x00	; 0
 504:	80 e8       	ldi	r24, 0x80	; 128
 506:	9f eb       	ldi	r25, 0xBF	; 191
 508:	08 95       	ret
 50a:	26 f4       	brtc	.+8      	; 0x514 <floor+0x22>
 50c:	1b 16       	cp	r1, r27
 50e:	61 1d       	adc	r22, r1
 510:	71 1d       	adc	r23, r1
 512:	81 1d       	adc	r24, r1
 514:	07 c0       	rjmp	.+14     	; 0x524 <__fp_mintl>
 516:	21 c0       	rjmp	.+66     	; 0x55a <__fp_mpack>

00000518 <__fp_inf>:
 518:	97 f9       	bld	r25, 7
 51a:	9f 67       	ori	r25, 0x7F	; 127
 51c:	80 e8       	ldi	r24, 0x80	; 128
 51e:	70 e0       	ldi	r23, 0x00	; 0
 520:	60 e0       	ldi	r22, 0x00	; 0
 522:	08 95       	ret

00000524 <__fp_mintl>:
 524:	88 23       	and	r24, r24
 526:	71 f4       	brne	.+28     	; 0x544 <__fp_mintl+0x20>
 528:	77 23       	and	r23, r23
 52a:	21 f0       	breq	.+8      	; 0x534 <__fp_mintl+0x10>
 52c:	98 50       	subi	r25, 0x08	; 8
 52e:	87 2b       	or	r24, r23
 530:	76 2f       	mov	r23, r22
 532:	07 c0       	rjmp	.+14     	; 0x542 <__fp_mintl+0x1e>
 534:	66 23       	and	r22, r22
 536:	11 f4       	brne	.+4      	; 0x53c <__fp_mintl+0x18>
 538:	99 27       	eor	r25, r25
 53a:	0d c0       	rjmp	.+26     	; 0x556 <__fp_mintl+0x32>
 53c:	90 51       	subi	r25, 0x10	; 16
 53e:	86 2b       	or	r24, r22
 540:	70 e0       	ldi	r23, 0x00	; 0
 542:	60 e0       	ldi	r22, 0x00	; 0
 544:	2a f0       	brmi	.+10     	; 0x550 <__fp_mintl+0x2c>
 546:	9a 95       	dec	r25
 548:	66 0f       	add	r22, r22
 54a:	77 1f       	adc	r23, r23
 54c:	88 1f       	adc	r24, r24
 54e:	da f7       	brpl	.-10     	; 0x546 <__fp_mintl+0x22>
 550:	88 0f       	add	r24, r24
 552:	96 95       	lsr	r25
 554:	87 95       	ror	r24
 556:	97 f9       	bld	r25, 7
 558:	08 95       	ret

0000055a <__fp_mpack>:
 55a:	9f 3f       	cpi	r25, 0xFF	; 255
 55c:	31 f0       	breq	.+12     	; 0x56a <__fp_mpack_finite+0xc>

0000055e <__fp_mpack_finite>:
 55e:	91 50       	subi	r25, 0x01	; 1
 560:	20 f4       	brcc	.+8      	; 0x56a <__fp_mpack_finite+0xc>
 562:	87 95       	ror	r24
 564:	77 95       	ror	r23
 566:	67 95       	ror	r22
 568:	b7 95       	ror	r27
 56a:	88 0f       	add	r24, r24
 56c:	91 1d       	adc	r25, r1
 56e:	96 95       	lsr	r25
 570:	87 95       	ror	r24
 572:	97 f9       	bld	r25, 7
 574:	08 95       	ret

00000576 <__fp_nan>:
 576:	9f ef       	ldi	r25, 0xFF	; 255
 578:	80 ec       	ldi	r24, 0xC0	; 192
 57a:	08 95       	ret

0000057c <__fp_pscA>:
 57c:	00 24       	eor	r0, r0
 57e:	0a 94       	dec	r0
 580:	16 16       	cp	r1, r22
 582:	17 06       	cpc	r1, r23
 584:	18 06       	cpc	r1, r24
 586:	09 06       	cpc	r0, r25
 588:	08 95       	ret

0000058a <__fp_pscB>:
 58a:	00 24       	eor	r0, r0
 58c:	0a 94       	dec	r0
 58e:	12 16       	cp	r1, r18
 590:	13 06       	cpc	r1, r19
 592:	14 06       	cpc	r1, r20
 594:	05 06       	cpc	r0, r21
 596:	08 95       	ret

00000598 <__fp_round>:
 598:	09 2e       	mov	r0, r25
 59a:	03 94       	inc	r0
 59c:	00 0c       	add	r0, r0
 59e:	11 f4       	brne	.+4      	; 0x5a4 <__fp_round+0xc>
 5a0:	88 23       	and	r24, r24
 5a2:	52 f0       	brmi	.+20     	; 0x5b8 <__fp_round+0x20>
 5a4:	bb 0f       	add	r27, r27
 5a6:	40 f4       	brcc	.+16     	; 0x5b8 <__fp_round+0x20>
 5a8:	bf 2b       	or	r27, r31
 5aa:	11 f4       	brne	.+4      	; 0x5b0 <__fp_round+0x18>
 5ac:	60 ff       	sbrs	r22, 0
 5ae:	04 c0       	rjmp	.+8      	; 0x5b8 <__fp_round+0x20>
 5b0:	6f 5f       	subi	r22, 0xFF	; 255
 5b2:	7f 4f       	sbci	r23, 0xFF	; 255
 5b4:	8f 4f       	sbci	r24, 0xFF	; 255
 5b6:	9f 4f       	sbci	r25, 0xFF	; 255
 5b8:	08 95       	ret

000005ba <__fp_split3>:
 5ba:	57 fd       	sbrc	r21, 7
 5bc:	90 58       	subi	r25, 0x80	; 128
 5be:	44 0f       	add	r20, r20
 5c0:	55 1f       	adc	r21, r21
 5c2:	59 f0       	breq	.+22     	; 0x5da <__fp_splitA+0x10>
 5c4:	5f 3f       	cpi	r21, 0xFF	; 255
 5c6:	71 f0       	breq	.+28     	; 0x5e4 <__fp_splitA+0x1a>
 5c8:	47 95       	ror	r20

000005ca <__fp_splitA>:
 5ca:	88 0f       	add	r24, r24
 5cc:	97 fb       	bst	r25, 7
 5ce:	99 1f       	adc	r25, r25
 5d0:	61 f0       	breq	.+24     	; 0x5ea <__fp_splitA+0x20>
 5d2:	9f 3f       	cpi	r25, 0xFF	; 255
 5d4:	79 f0       	breq	.+30     	; 0x5f4 <__fp_splitA+0x2a>
 5d6:	87 95       	ror	r24
 5d8:	08 95       	ret
 5da:	12 16       	cp	r1, r18
 5dc:	13 06       	cpc	r1, r19
 5de:	14 06       	cpc	r1, r20
 5e0:	55 1f       	adc	r21, r21
 5e2:	f2 cf       	rjmp	.-28     	; 0x5c8 <__fp_split3+0xe>
 5e4:	46 95       	lsr	r20
 5e6:	f1 df       	rcall	.-30     	; 0x5ca <__fp_splitA>
 5e8:	08 c0       	rjmp	.+16     	; 0x5fa <__fp_splitA+0x30>
 5ea:	16 16       	cp	r1, r22
 5ec:	17 06       	cpc	r1, r23
 5ee:	18 06       	cpc	r1, r24
 5f0:	99 1f       	adc	r25, r25
 5f2:	f1 cf       	rjmp	.-30     	; 0x5d6 <__fp_splitA+0xc>
 5f4:	86 95       	lsr	r24
 5f6:	71 05       	cpc	r23, r1
 5f8:	61 05       	cpc	r22, r1
 5fa:	08 94       	sec
 5fc:	08 95       	ret

000005fe <__fp_trunc>:
 5fe:	e5 df       	rcall	.-54     	; 0x5ca <__fp_splitA>
 600:	a0 f0       	brcs	.+40     	; 0x62a <__fp_trunc+0x2c>
 602:	be e7       	ldi	r27, 0x7E	; 126
 604:	b9 17       	cp	r27, r25
 606:	88 f4       	brcc	.+34     	; 0x62a <__fp_trunc+0x2c>
 608:	bb 27       	eor	r27, r27
 60a:	9f 38       	cpi	r25, 0x8F	; 143
 60c:	60 f4       	brcc	.+24     	; 0x626 <__fp_trunc+0x28>
 60e:	16 16       	cp	r1, r22
 610:	b1 1d       	adc	r27, r1
 612:	67 2f       	mov	r22, r23
 614:	78 2f       	mov	r23, r24
 616:	88 27       	eor	r24, r24
 618:	98 5f       	subi	r25, 0xF8	; 248
 61a:	f7 cf       	rjmp	.-18     	; 0x60a <__fp_trunc+0xc>
 61c:	86 95       	lsr	r24
 61e:	77 95       	ror	r23
 620:	67 95       	ror	r22
 622:	b1 1d       	adc	r27, r1
 624:	93 95       	inc	r25
 626:	96 39       	cpi	r25, 0x96	; 150
 628:	c8 f3       	brcs	.-14     	; 0x61c <__fp_trunc+0x1e>
 62a:	08 95       	ret

0000062c <__fp_zero>:
 62c:	e8 94       	clt

0000062e <__fp_szero>:
 62e:	bb 27       	eor	r27, r27
 630:	66 27       	eor	r22, r22
 632:	77 27       	eor	r23, r23
 634:	cb 01       	movw	r24, r22
 636:	97 f9       	bld	r25, 7
 638:	08 95       	ret

0000063a <_exit>:
 63a:	f8 94       	cli

0000063c <__stop_program>:
 63c:	ff cf       	rjmp	.-2      	; 0x63c <__stop_program>

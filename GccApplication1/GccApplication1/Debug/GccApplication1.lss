
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000238  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001c4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  00000238  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000238  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000268  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  000002a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a82  00000000  00000000  000002f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008f4  00000000  00000000  00000d76  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003ed  00000000  00000000  0000166a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000ac  00000000  00000000  00001a58  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004ca  00000000  00000000  00001b04  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000014c  00000000  00000000  00001fce  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  0000211a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	6a c0       	rjmp	.+212    	; 0x106 <__vector_12>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e4 ec       	ldi	r30, 0xC4	; 196
  a0:	f1 e0       	ldi	r31, 0x01	; 1
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 30       	cpi	r26, 0x00	; 0
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a0 e0       	ldi	r26, 0x00	; 0
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a4 30       	cpi	r26, 0x04	; 4
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	55 d0       	rcall	.+170    	; 0x16e <main>
  c4:	7d c0       	rjmp	.+250    	; 0x1c0 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <adcInit>:
	if (newpitch != outpitch)
	{
		outpitch = newpitch;
		if (TCNT1 > outpitch)
		TCNT1 = 0;
		OCR1A = outpitch;
  c8:	81 e6       	ldi	r24, 0x61	; 97
  ca:	87 b9       	out	0x07, r24	; 7
  cc:	86 e8       	ldi	r24, 0x86	; 134
  ce:	86 b9       	out	0x06, r24	; 6
  d0:	08 95       	ret

000000d2 <changeADCChannel>:
  d2:	80 66       	ori	r24, 0x60	; 96
  d4:	87 b9       	out	0x07, r24	; 7
  d6:	08 95       	ret

000000d8 <readADC>:
  d8:	86 b1       	in	r24, 0x06	; 6
  da:	80 64       	ori	r24, 0x40	; 64
  dc:	86 b9       	out	0x06, r24	; 6
  de:	36 99       	sbic	0x06, 6	; 6
  e0:	fe cf       	rjmp	.-4      	; 0xde <readADC+0x6>
  e2:	85 b1       	in	r24, 0x05	; 5
  e4:	90 e0       	ldi	r25, 0x00	; 0
  e6:	08 95       	ret

000000e8 <wait>:
  e8:	20 e0       	ldi	r18, 0x00	; 0
  ea:	30 e0       	ldi	r19, 0x00	; 0
  ec:	08 c0       	rjmp	.+16     	; 0xfe <wait+0x16>
  ee:	ef ec       	ldi	r30, 0xCF	; 207
  f0:	f7 e0       	ldi	r31, 0x07	; 7
  f2:	31 97       	sbiw	r30, 0x01	; 1
  f4:	f1 f7       	brne	.-4      	; 0xf2 <wait+0xa>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <wait+0x10>
  f8:	00 00       	nop
  fa:	2f 5f       	subi	r18, 0xFF	; 255
  fc:	3f 4f       	sbci	r19, 0xFF	; 255
  fe:	28 17       	cp	r18, r24
 100:	39 07       	cpc	r19, r25
 102:	ac f3       	brlt	.-22     	; 0xee <wait+0x6>
 104:	08 95       	ret

00000106 <__vector_12>:
 106:	1f 92       	push	r1
 108:	0f 92       	push	r0
 10a:	0f b6       	in	r0, 0x3f	; 63
 10c:	0f 92       	push	r0
 10e:	11 24       	eor	r1, r1
 110:	2f 93       	push	r18
 112:	3f 93       	push	r19
 114:	4f 93       	push	r20
 116:	5f 93       	push	r21
 118:	8f 93       	push	r24
 11a:	9f 93       	push	r25
 11c:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <waveform>
 120:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <waveform+0x1>
 124:	9c 01       	movw	r18, r24
 126:	35 95       	asr	r19
 128:	27 95       	ror	r18
 12a:	30 93 03 01 	sts	0x0103, r19	; 0x800103 <waveform+0x1>
 12e:	20 93 02 01 	sts	0x0102, r18	; 0x800102 <waveform>
 132:	ac 01       	movw	r20, r24
 134:	41 70       	andi	r20, 0x01	; 1
 136:	55 27       	eor	r21, r21
 138:	80 ff       	sbrs	r24, 0
 13a:	05 c0       	rjmp	.+10     	; 0x146 <__vector_12+0x40>
 13c:	30 68       	ori	r19, 0x80	; 128
 13e:	30 93 03 01 	sts	0x0103, r19	; 0x800103 <waveform+0x1>
 142:	20 93 02 01 	sts	0x0102, r18	; 0x800102 <waveform>
 146:	45 2b       	or	r20, r21
 148:	21 f0       	breq	.+8      	; 0x152 <__vector_12+0x4c>
 14a:	83 b1       	in	r24, 0x03	; 3
 14c:	84 60       	ori	r24, 0x04	; 4
 14e:	83 b9       	out	0x03, r24	; 3
 150:	03 c0       	rjmp	.+6      	; 0x158 <__vector_12+0x52>
 152:	83 b1       	in	r24, 0x03	; 3
 154:	8b 7f       	andi	r24, 0xFB	; 251
 156:	83 b9       	out	0x03, r24	; 3
 158:	9f 91       	pop	r25
 15a:	8f 91       	pop	r24
 15c:	5f 91       	pop	r21
 15e:	4f 91       	pop	r20
 160:	3f 91       	pop	r19
 162:	2f 91       	pop	r18
 164:	0f 90       	pop	r0
 166:	0f be       	out	0x3f, r0	; 63
 168:	0f 90       	pop	r0
 16a:	1f 90       	pop	r1
 16c:	18 95       	reti

0000016e <main>:
	}
}

int main()
{	
	DDRF = 0x00;
 16e:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
	DDRA = 0xFF;
 172:	8f ef       	ldi	r24, 0xFF	; 255
 174:	8a bb       	out	0x1a, r24	; 26
	DDRD = 0xFF;
 176:	81 bb       	out	0x11, r24	; 17
	DDRE = 0xFF;
 178:	82 b9       	out	0x02, r24	; 2
	
	adcInit();
 17a:	a6 df       	rcall	.-180    	; 0xc8 <adcInit>
	
	sei();
 17c:	78 94       	sei
	
	TCCR1B |= _BV(WGM12);  // enable CTC
 17e:	8e b5       	in	r24, 0x2e	; 46
 180:	88 60       	ori	r24, 0x08	; 8
 182:	8e bd       	out	0x2e, r24	; 46
	TIMSK |= _BV(OCIE1A); // enable CTC interrupt
 184:	87 b7       	in	r24, 0x37	; 55
 186:	80 61       	ori	r24, 0x10	; 16
 188:	87 bf       	out	0x37, r24	; 55
	
	wavenum = 3;
 18a:	83 e0       	ldi	r24, 0x03	; 3
 18c:	90 e0       	ldi	r25, 0x00	; 0
 18e:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 192:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	waveform = waveforms[wavenum];
 196:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <waveform+0x1>
 19a:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <waveform>
	
	TCCR1B |= _BV(CS11); // set prescaler to 8; starts oscillator
 19e:	8e b5       	in	r24, 0x2e	; 46
 1a0:	82 60       	ori	r24, 0x02	; 2
 1a2:	8e bd       	out	0x2e, r24	; 46
	
	while(1){
		changeADCChannel(0);
 1a4:	80 e0       	ldi	r24, 0x00	; 0
 1a6:	90 e0       	ldi	r25, 0x00	; 0
		PORTA = readADC();
 1a8:	94 df       	rcall	.-216    	; 0xd2 <changeADCChannel>
 1aa:	96 df       	rcall	.-212    	; 0xd8 <readADC>
		changeADCChannel(1);
 1ac:	8b bb       	out	0x1b, r24	; 27
 1ae:	81 e0       	ldi	r24, 0x01	; 1
 1b0:	90 e0       	ldi	r25, 0x00	; 0
		PORTD = readADC();
 1b2:	8f df       	rcall	.-226    	; 0xd2 <changeADCChannel>
 1b4:	91 df       	rcall	.-222    	; 0xd8 <readADC>
		
		//update_pitch();
		
		wait(100);
 1b6:	82 bb       	out	0x12, r24	; 18
 1b8:	84 e6       	ldi	r24, 0x64	; 100
 1ba:	90 e0       	ldi	r25, 0x00	; 0
 1bc:	95 df       	rcall	.-214    	; 0xe8 <wait>
 1be:	f2 cf       	rjmp	.-28     	; 0x1a4 <main+0x36>

000001c0 <_exit>:
 1c0:	f8 94       	cli

000001c2 <__stop_program>:
 1c2:	ff cf       	rjmp	.-2      	; 0x1c2 <__stop_program>
